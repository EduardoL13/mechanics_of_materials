# Módulo de Mecánica de sólidos (mecsolids): Contiene todas las funciones relacionadas con mecánica de sólidos

# Funciones para determinar esfuerzos en puntos o secciones determinadas
def axialStress(load,areaSection):
    """
    Description:
    Calculates axial stress for a prismatic element of constant stress in the section

    Parameters:
    load: applied load
    areaSection: Area of the beam cross section

    Output:
    sigma > stress #[units according to given input]
    """
    sigma = load/areaSection
    return sigma

def bendStress(moment,yNeutralAxis,inertia):
    """
    Description:
    Calculates axial stress generated by pure bending (works too for calculating flexing stress component in combined loading)

    Parameters:
    moment: applied moment
    yNeutralAxis: distance from neutral axis
    inertia: geometric inertia through neutral axis

    Output:
    sigma > stress #[units according to given input]
    """
    sigma = moment*yNeutralAxis/inertia
    return sigma

def shearingStress(shearV,areaMomentQ,inertia,widthinNA):
    """
    Description:
    Calculates shear stress generated by shearing action

    Parameters:
    shearV: shear force acting on face
    areaMomentQ: 1st moment of area of the profile face (ycg*A)
    inertia: geometric inertia through neutral axis
    widthinNA: profile width in the evaluated point (generally the neutral axis (NA))

    Output:
    tao > Shear stress #[units according to given input]
    """

    tao = shearV * areaMomentQ*1/(inertia*widthinNA)
    return tao

def torsionStress(torque,radius,polarMoment):
    """
    Description:
    Calculates shear stress generated by torsion

    Parameters:
    torque: torque acting on facae
    yNeutralAxis: distance from neutral axis
    inertia: geometric inertia through neutral axis

    Output:
    tao > Shear stress #[units according to given input]
    """
    tao = torque*radius*1/polarMoment
    return tao
